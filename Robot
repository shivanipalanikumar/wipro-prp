90 45 with 1/2 moves

public class RobotMovement {
	static RobotMovement obj;
	int setMoveUnit(String instruction) {
		if(instruction.equals("M")) {
			return 2;
		}
		return 1;
	}
	
	String movement(int x, int y, String curPos, String moves) {
		int curX = Integer.parseInt(curPos.split("-")[0]);
		int curY = Integer.parseInt(curPos.split("-")[1]);
		String curD = curPos.split("-")[2];
		
		String instructions[] = moves.split(" ");
		
		int i,unit;
		for(i=0;i<instructions.length;i++) {
			if(instructions[i].equals("m") || instructions[i].equals("M")) {
				unit=setMoveUnit(instructions[i]);
				if(curD.equals("N")) {
					if(curY+unit > y) {
						break;
					}else {
						curY+=unit;
					}
				}else if(curD.equals("S")) {
					if(curY-unit < 0) {
						break;
					}else {
						curY-=unit;
					}						
				}else if(curD.equals("E")) {
					if(curX+unit > x) {
						break;
					}else {
						curX+=unit;
					}
				}else if(curD.equals("W")) {
					if(curX-unit < 0) {
						break;
					}else {
						curX-=unit;
					}						
				}else if(curD.equals("NE")) {
					if(curX+unit > x || curY+unit > y) {
						break;
					}else {
						curX+=unit;
						curY+=unit;
					}
				}else if(curD.equals("SE")) {
					if(curX+unit > x || curY-unit < 0) {
						break;
					}else {
						curX+=unit;
						curY-=unit;
					}						
				}else if(curD.equals("SW")) {
					if(curX-unit < 0 || curY-unit < 0) {
						break;
					}else {
						curX-=unit;
						curY-=unit;
					}
				}else if(curD.equals("NW")) {
					if(curX-unit < 0 || curY+unit > y) {
						break;
					}else {
						curX-=unit;
						curY+=unit;
					}						
				}
			}else {
				if(curD.equals("N")) {
					if(instructions[i].equals("L")) {
						curD="W";
					}else if(instructions[i].equals("R")){
						curD="E";
					}else if(instructions[i].equals("l")) {
						curD="NW";
					}else if(instructions[i].equals("r")){
						curD="NE";
					}
				}else if(curD.equals("S")) {
					if(instructions[i].equals("L")) {
						curD="E";
					}else if(instructions[i].equals("R")){
						curD="W";
					}else if(instructions[i].equals("l")) {
						curD="SE";
					}else if(instructions[i].equals("r")){
						curD="SW";
					}
				}else if(curD.equals("E")) {
					if(instructions[i].equals("L")) {
						curD="N";
					}else if(instructions[i].equals("R")){
						curD="S";
					}else if(instructions[i].equals("l")) {
						curD="NE";
					}else if(instructions[i].equals("r")){
						curD="SE";
					}
				}else if(curD.equals("W")) {
					if(instructions[i].equals("L")) {
						curD="S";
					}else if(instructions[i].equals("R")){
						curD="N";
					}else if(instructions[i].equals("l")) {
						curD="SW";
					}else if(instructions[i].equals("r")){
						curD="NW";
					}
				}else if(curD.equals("NE")) {
					if(instructions[i].equals("L")) {
						curD="NW";
					}else if(instructions[i].equals("R")) {
						curD="SE";
					}else if(instructions[i].equals("l")) {
						curD="N";
					}else if(instructions[i].equals("r")) {
						curD="E";
					}
				}else if(curD.equals("SE")) {
					if(instructions[i].equals("L")) {
						curD="NE";
					}else if(instructions[i].equals("R")) {
						curD="SW";
					}else if(instructions[i].equals("l")) {
						curD="E";
					}else if(instructions[i].equals("r")) {
						curD="S";
					}
				}else if(curD.equals("NW")) {
					if(instructions[i].equals("L")) {
						curD="SW";
					}else if(instructions[i].equals("R")) {
						curD="NE";
					}else if(instructions[i].equals("l")) {
						curD="W";
					}else if(instructions[i].equals("r")) {
						curD="N";
					}
				}else if(curD.equals("SW")) {
					if(instructions[i].equals("L")) {
						curD="SE";
					}else if(instructions[i].equals("R")) {
						curD="NW";
					}else if(instructions[i].equals("l")) {
						curD="S";
					}else if(instructions[i].equals("r")) {
						curD="W";
					}
				}
			}
		}
		String result = curX+"-"+curY+"-"+curD;
		if(i!=instructions.length) {
			result+="-ER";
		}
		return result;
	}
	public static void main(String[] args) {
		int X = 5;
		int Y = 4;
		String curPos="1-2-E";
		String moves="r M l m L M r";
		//expected output => 4-2-NE
		obj = new RobotMovement();
		String output = obj.movement(X,Y,curPos,moves);	
		System.out.print(output);

	}

}


----------------------------------------------------------------------------------------------------------------------


90 45 with 1 move

package test;
import  java.util.*;
public class My_Robot {

	public static void main(String[] args) {
		Scanner s =new Scanner(System.in);
		int input1=s.nextInt();
		int input2=s.nextInt();
		String input3=s.next();
		String input4=s.next();
		int X = input1;
		int Y = input2;
		String currentPos = input3;
		String msg = input4;
		s.close();
		int currX = Integer.parseInt(currentPos.split("-")[0]);
		int currY = Integer.parseInt(currentPos.split("-")[1]);
		String currD = currentPos.split("-")[2]; // E/W/N/S
		String[] instructions = msg.split("-"); // M L R M M L M ...
		StringBuilder output = new StringBuilder();
		String ER="";
		
		for (int i = 0; i < instructions.length; i++) {
			System.out.println(instructions[i] + ":: "+currX+"-"+currY+"-"+currD);
			if (instructions[i].equals("M")) {
				if (currD.equals("E") && (currX + 1 > X )) {
					ER="-ER";
					break;
				} 
				if (currD.equals("W") && (currX - 1 < 0 )) {
					ER="-ER";
					break;
				} 
				if (currD.equals("N") && (currY + 1 > Y )) {
					ER="-ER";
					break;
				} 
				if (currD.equals("S") && (currY - 1 < 0 )) {
					ER="-ER";
					break;
				}
				if (currD.equals("NE") && ((currX + 1 > X )||(currY + 1 > Y))) {
					ER="-ER";
					break;
				} 
				else if (currD.equals("NE")){
					currX+=1;
					currY+=1;
				}
				if (currD.equals("NW") && ((currX - 1 < 0 )||(currY + 1 > Y))){
					ER="-ER";
					break;
				} 
				else if (currD.equals("NW")){
					currX-=1;
					currY+=1;
				}
				if (currD.equals("SE") && ((currY - 1 < 0 ) ||(currX + 1 > X))) {
					ER="-ER";
					break;
				} 
				else if (currD.equals("SE")){
					currX+=1;
					currY-=1;
				}

				if (currD.equals("SW") && (currY - 1 < 0 ) || (currX - 1 < 0)) {
					ER="-ER";
					break;
				}
				else if (currD.equals("SW")){
					currX-=1;
					currY-=1;
				}

				if (currD.equals("E")) currX++;
				else if (currD.equals("W")) currX--;
				else if (currD.equals("N")) currY++;
				else if (currD.equals("S")) currY--;
			} 
			else {
				if (currD.equals("E") && instructions[i].equals("L"))
				    currD = "N";
				else if ((currD.equals("E") && instructions[i].equals("l"))||(currD.equals("NW") && instructions[i].equals("R"))||(currD.equals("SE") && instructions[i].equals("L"))||(currD.equals("N") && instructions[i].equals("r")))
					currD ="NE";
				else if ((currD.equals("E") && instructions[i].equals("R"))||(currD.equals("SW") && instructions[i].equals("l")))
					currD = "S";
				else if ((currD.equals("E") && instructions[i].equals("r"))||(currD.equals("NE") && instructions[i].equals("R"))||(currD.equals("SW") && instructions[i].equals("L"))||(currD.equals("S") && instructions[i].equals("l")))
					currD="SE";
				else if ((currD.equals("W") && instructions[i].equals("L"))||(currD.equals("NW") && instructions[i].equals("l"))||(currD.equals("SE") && instructions[i].equals("r")))
					currD = "S";
				else if ((currD.equals("w") && instructions[i].equals("l"))||(currD.equals("NW") && instructions[i].equals("L"))||(currD.equals("SE") && instructions[i].equals("R"))||(currD.equals("S") && instructions[i].equals("r")))
					currD="SW";
				else if ((currD.equals("w") && instructions[i].equals("r"))||(currD.equals("NE") && instructions[i].equals("L"))||(currD.equals("SW") && instructions[i].equals("R"))||(currD.equals("N") && instructions[i].equals("l")))
					currD="NW";
				else if ((currD.equals("W") && instructions[i].equals("R"))||(currD.equals("NE") && instructions[i].equals("l"))||(currD.equals("NW") && instructions[i].equals("r")))
					currD = "N";
				else if ((currD.equals("N") && instructions[i].equals("L"))||(currD.equals("SW") && instructions[i].equals("r")))
					currD = "W";
				else if ((currD.equals("N") && instructions[i].equals("R"))||(currD.equals("SE") && instructions[i].equals("l")))
					currD = "E";
				else if ((currD.equals("S") && instructions[i].equals("L"))||(currD.equals("NE") && instructions[i].equals("r")))
					currD = "E";
				else if (currD.equals("S") && instructions[i].equals("R"))
					currD = "W";
			}
			
			//output.delete(0, output.length());
			
			//System.out.println(output);
		}
		output.append(currX + "-" + currY + "-" + currD+""+ER);
		System.out.println("Ans: "+output.toString());
		
	}
}
----------------------------------------------------------------------------------------







public class Robot 
{
	static Robot ob;
	String Instruct(int x,int y,int x1,int y1,String dir,String st,char[] arr)
	{
		int i;
		char place;
		String flag="";
		for(i=0;i<arr.length;i++)
		{
			place=arr[i];
			if(place=='M')
			{
				if(dir.equals("N") && y1+2<=y)
					y1+=2;
				else if(dir.equals("S") && y1-2>=0)
					y1-=2;
				else if(dir.equals("E") && x1+2<=x)
					x1+=2;
				else if(dir.equals("W") && x1-2>=0)
					x1-=2;
				else if(dir.equals("NE") && x1+2<=x && y1+2<=y)
				{
					x1+=2;
					y1+=2;
				}
				else if(dir.equals("SE") && x1+2<=x && y1-2>=0)
				{
					x1+=2;
					y1-=2;
				}
				else if(dir.equals("SW") && x1-2>=0 && y1-2>=0)
				{
					x1-=2;
					y1-=2;
				}
				else if(dir.equals("NW") && x1-2>=0 && y1+2<=y)
				{
					x1-=2;
					y1+=2;
				}
				else
				{
					flag="-ER";
					break;
				}
			}
			if(place=='m')
			{
				if(dir.equals("N") && y1+1<=y)
					y1+=1;
				else if(dir.equals("S") && y1-1>=0)
					y1-=1;
				else if(dir.equals("E") && x1+1<=x)
					x1+=1;
				else if(dir.equals("W") && x1-1>=0)
					x1-=1;
				else if(dir.equals("NE") && x1+1<=x && y1+1<=y)
				{
					x1+=1;
					y1+=1;
				}
				else if(dir.equals("SE") && x1+1<=x && y1-1>=0)
				{
					x1+=1;
					y1-=1;
				}
				else if(dir.equals("SW") && x1-1>=0 && y1-1>=0)
				{
					x1-=1;
					y1-=1;
				}
				else if(dir.equals("NW") && x1-1>=0 && y1+1<=y)
				{
					x1-=1;
					y1+=1;
				}
				else
				{
					flag="-ER";
					break;
				}
			}
			if(place=='L')
			{
				if(dir.equals("N"))
					dir="W";
				else if(dir.equals("E"))
					dir="N";
				else if(dir.equals("S"))
					dir="E";
				else if(dir.equals("W"))
					dir="S";
				else if(dir.equals("NE"))
					dir="NW";
				else if(dir.equals("SE"))
					dir="NE";
				else if(dir.equals("SW"))
					dir="SE";
				else if(dir.equals("NW"))
					dir="SW";
			}
			if(place=='R')
			{
				if(dir.equals("N"))
					dir="E";
				else if(dir.equals("E"))
					dir="S";
				else if(dir.equals("S"))
					dir="W";
				else if(dir.equals("W"))
					dir="N";
				else if(dir.equals("NE"))
					dir="SE";
				else if(dir.equals("SE"))
					dir="SW";
				else if(dir.equals("SW"))
					dir="NW";
				else if(dir.equals("NW"))
					dir="NE";
			}
			if(place=='l')
			{
				if(dir.equals("N"))
					dir="NW";
				else if(dir.equals("E"))
					dir="NE";
				else if(dir.equals("S"))
					dir="SE";
				else if(dir.equals("W"))
					dir="SW";
				else if(dir.equals("NE"))
					dir="N";
				else if(dir.equals("SE"))
					dir="E";
				else if(dir.equals("SW"))
					dir="S";
				else if(dir.equals("NW"))
					dir="W";
			}
			if(place=='r')
			{
				if(dir.equals("N"))
					dir="NE";
				else if(dir.equals("E"))
					dir="SE";
				else if(dir.equals("S"))
					dir="SW";
				else if(dir.equals("W"))
					dir="NW";
				else if(dir.equals("NE"))
					dir="E";
				else if(dir.equals("SE"))
					dir="S";
				else if(dir.equals("SW"))
					dir="W";
				else if(dir.equals("NW"))
					dir="N";
			}
		}
		String fin=Integer.toString(x1)+"-"+Integer.toString(y1)+"-"+dir+flag;
		
		return fin;
	}
	public static void main(String[] args) 
	{
		int x=7,y=7;
		String st="4-6-SW";
		char[] arr=new char[]{'M','r','m','l','M','m','R'};
		int x1=Integer.parseInt(st.charAt(0)+"");
		int y1=Integer.parseInt(st.charAt(2)+"");
		String dir=st.substring(4);
		ob=new Robot();
		String fin=ob.Instruct(x,y,x1,y1,dir,st,arr);
		System.out.println(fin);
	}
}
